<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PrintXHL</title>
  <icon>https://www.gravatar.com/avatar/36ad04c0c0d9ba5ed3745903d32630e7</icon>
  <subtitle>我就想做一点微小的工作</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://printxhl.com/"/>
  <updated>2019-05-16T10:36:23.172Z</updated>
  <id>http://printxhl.com/</id>
  
  <author>
    <name>谢海练</name>
    <email>xiehailian66@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Profiling Go Programs</title>
    <link href="http://printxhl.com/2019/05/16/Go-PProf/"/>
    <id>http://printxhl.com/2019/05/16/Go-PProf/</id>
    <published>2019-05-16T02:55:11.125Z</published>
    <updated>2019-05-16T10:36:23.172Z</updated>
    
    <content type="html"><![CDATA[<p><code>pprof</code>是Go语言自带的性能检查工具。通过这个工具可以定位Go语言程序中存在的性能问题，进而优化性能。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><a href="https://studygolang.com/dl/golang/go1.12.5.src.tar.gz" target="_blank" rel="external">golang</a></li><li><a href="https://github.com/tsliwowicz/go-wrk" target="_blank" rel="external">go-wrk</a>，并发测试工具<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">go get -v github.com/tsliwowicz/go-wrk</div><div class="line"></div><div class="line"><span class="comment"># go-wrk需要依赖golang.org/x/net, 国内下载很慢</span></div><div class="line">$ mkdir -p <span class="variable">$GOPATH</span>/src/golang.org/x</div><div class="line">$ <span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/golang.org/x</div><div class="line">$ git <span class="built_in">clone</span> https://github.com/golang/net.git</div></pre></td></tr></table></figure></li></ul><ul><li><a href="https://gitlab.com/graphviz/graphviz" target="_blank" rel="external">graphviz</a>，图形化工具<br><code>yum install graphviz</code></li></ul><h3 id="利用PProf优化程序性能"><a href="#利用PProf优化程序性能" class="headerlink" title="利用PProf优化程序性能"></a>利用PProf优化程序性能</h3><p>对代码进行性能分析时，需要导入pprof包：</p><ul><li><code>runtime/pprof</code>: 采集程序(非HTTP Server)的运行数据进行分析</li><li><code>net/http/pprof</code>: 采集HTTP Server的运行数据进行分析<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> (</div><div class="line">    <span class="string">"net/http"</span></div><div class="line">    _ <span class="string">"net/http/pprof"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">var</span> s  []<span class="keyword">int</span></div><div class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>; i&lt; <span class="number">10000</span>; i++ &#123;</div><div class="line">        s = <span class="built_in">append</span>(s, i)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">go</span> test()</div><div class="line">    http.ListenAndServe(<span class="string">"localhost:8080"</span>, <span class="literal">nil</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>在进行分析时，有如下几种模式：</p><h4 id="通过WEB界面分析"><a href="#通过WEB界面分析" class="headerlink" title="通过WEB界面分析"></a>通过WEB界面分析</h4><p>访问<a href="http://192.168.56.2:9090/debug/pprof/" target="_blank" rel="external">http://192.168.56.2:9090/debug/pprof/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Types of profiles available:</div><div class="line">CountProfile</div><div class="line">34allocs: 查看过去所有的内存分配情况</div><div class="line">0block: 查看导致阻塞同步的堆栈跟踪</div><div class="line">0cmdline: 当前程序的调用命令行</div><div class="line">4goroutine: 查看当前所有运行的 goroutines 堆栈跟踪</div><div class="line">34heap: 查看活动对象的内存分配情况</div><div class="line">0mutex: 查看导致互斥锁的竞争持有者的堆栈跟踪</div><div class="line">0profile: 默认进行 30s 的 CPU Profiling，得到一个分析用的 profile 文件</div><div class="line">10threadcreate: 查看创建新OS线程的堆栈跟踪</div><div class="line">0trace: 当前程序的执行路径，可以使用`go tool trace`进行分析</div></pre></td></tr></table></figure></p><h4 id="通过命令行分析"><a href="#通过命令行分析" class="headerlink" title="通过命令行分析"></a>通过命令行分析</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ go tool pprof http://localhost:9090/debug/pprof/profile</div><div class="line"></div><div class="line">File: main</div><div class="line">Type: cpu</div><div class="line">Time: May 16, 2019 at 3:08pm (CST)</div><div class="line">Duration: 5.18s, Total samples = 3.28s (63.31%)</div><div class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</div><div class="line">(pprof) top</div><div class="line">Showing nodes accounting <span class="keyword">for</span> 1620ms, 49.39% of 3280ms total</div><div class="line">Dropped 118 nodes (cum &lt;= 16.40ms)</div><div class="line">Showing top 10 nodes out of 160</div><div class="line">    flat  flat%   sum%        cum   cum%</div><div class="line">    1100ms 33.54% 33.54%     1130ms 34.45%  syscall.Syscall</div><div class="line">    80ms  2.44% 35.98%      120ms  3.66%  runtime.deferreturn</div><div class="line">    70ms  2.13% 38.11%       70ms  2.13%  runtime.epollwait</div><div class="line">    60ms  1.83% 39.94%       60ms  1.83%  net/http.(*exactSig).match</div><div class="line">    60ms  1.83% 41.77%       60ms  1.83%  runtime.futex</div><div class="line">    60ms  1.83% 43.60%       80ms  2.44%  runtime.mapaccess1_faststr</div></pre></td></tr></table></figure><ul><li>flat: 对应函数的运行耗时</li><li>flat%: 对应函数在CPU运行耗时比列</li><li>sum%: 对应函数累计使用CPU的总比例</li><li>cum: 对应函数加上它的调用的总耗时</li><li>cum%: 对应函数加上它的调用的耗时比例</li></ul><h4 id="通过可视化界面分析"><a href="#通过可视化界面分析" class="headerlink" title="通过可视化界面分析"></a>通过可视化界面分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go tool pprof -http=&quot;192.168.56.2:8080&quot; --seconds 5  http://localhost:9090/debug/pprof/profile</div></pre></td></tr></table></figure><h4 id="由浅入深的性能分析过程"><a href="#由浅入深的性能分析过程" class="headerlink" title="由浅入深的性能分析过程"></a>由浅入深的性能分析过程</h4><p>以<a href="https://www.youtube.com/watch?v=N3PWzBeLX2M&amp;list=LLvH-YHAzDhKXWt9nLAXC6cA&amp;index=6&amp;t=2239s" target="_blank" rel="external">Profiling and Optimizing Go</a>的性能优化为例子，来介绍pprof性能优化的过程</p><ol><li>默认的pprof页面概览<br> <a href="http://192.168.56.2:9090/debug/pprof/" target="_blank" rel="external">http://192.168.56.2:9090/debug/pprof/</a></li><li><p>分析火焰图，定位接口涉及的耗时函数</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ go tool pprof -http=&quot;192.168.56.2:8080&quot; --seconds 5  http://localhost:9090/debug/pprof/profile</div></pre></td></tr></table></figure></li><li><p>查看函数内部的耗时情况</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ go tool pprof http://localhost:9090/debug/pprof/profile</div></pre></td></tr></table></figure><ul><li>list regex: 查看regex函数内部的耗时</li><li>disasm regex: 查看regex函数对应的汇编码耗时</li></ul></li><li><p>通过基准测试，生成测试报告，获得更详细的性能分析情况</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ go test -bench . -benchmem -cpuprofile prof.cpu -memprofile prof.mem</div><div class="line">$ go tool pprof stats.test prof.cpu</div><div class="line">$ go tool pprof -alloc_objects stats.test prof.mem</div></pre></td></tr></table></figure></li><li><p>在编译过程进行逃逸分析，尽量避免在堆上分配空间，减少垃圾回收的时间</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ go build -gcflags=-m .</div></pre></td></tr></table></figure></li></ol><h3 id="利用PProf排查程序问题"><a href="#利用PProf排查程序问题" class="headerlink" title="利用PProf排查程序问题"></a>利用PProf排查程序问题</h3><p>不健壮的程序，比如启动了大量的goroutine没有退出，又或是不使用的对象仍存在于内存中，这些问题都可以通过PProf来快速定位问题</p><h4 id="协程泄漏"><a href="#协程泄漏" class="headerlink" title="协程泄漏"></a>协程泄漏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">import (</div><div class="line">&quot;fmt&quot;</div><div class="line">&quot;net/http&quot;</div><div class="line">_ &quot;net/http/pprof&quot;</div><div class="line">&quot;time&quot;</div><div class="line">)</div><div class="line"></div><div class="line">func test(i time.Time) &#123;</div><div class="line">fmt.Println(i)</div><div class="line">for &#123;</div><div class="line">select &#123;&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">func main() &#123;</div><div class="line">go http.ListenAndServe(&quot;localhost:8080&quot;, nil)</div><div class="line">c := time.Tick(1 * time.Second)</div><div class="line">for range c &#123;</div><div class="line">go test(&lt;-c)</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>访问：<a href="http://localhost:8080/debug/pprof/goroutine" target="_blank" rel="external">http://localhost:8080/debug/pprof/goroutine</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">goroutine profile: total 88</div><div class="line">83 @ 0x430690 0x43f480 0x6ef801 0x45c3c1</div><div class="line">#0x6ef800main.test+0xa0C:/Users/xiehailian/OneDrive/xiehailian/go-base/pkg/pprof/process/process.go:15</div></pre></td></tr></table></figure></p><p>goroutine创建后没有退出目前已经有83个协程了，而且一直在积累，导致协程泄漏</p><h4 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h4><ul><li>内存溢出：是指程序在申请内存时，没有足够的内存空间供其使用，出现out of memory。</li><li>内存泄漏：是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄露危害可以忽略，但内存泄露堆积后果很严重，无论多少内存，迟早会被占光，占光以后内存就溢出了<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">import (</div><div class="line">&quot;fmt&quot;</div><div class="line">&quot;net/http&quot;</div><div class="line">_ &quot;net/http/pprof&quot;</div><div class="line">&quot;time&quot;</div><div class="line">)</div><div class="line"></div><div class="line">func memoryLeak() &#123;</div><div class="line">    for &#123;</div><div class="line">        select &#123;</div><div class="line">        case &lt;-time.After(3 * time.Second):</div><div class="line">        default:</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">func main() &#123;</div><div class="line">go memoryLeak()</div><div class="line">http.ListenAndServe(&quot;localhost:8080&quot;, nil)</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>通过命令行查看heap分配情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ go tool pprof http://localhost:8080/debug/pprof/heap</div><div class="line"></div><div class="line">(pprof) top</div><div class="line">Showing nodes accounting <span class="keyword">for</span> 1250.09MB, 100% of 1250.59MB total</div><div class="line">Dropped 6 nodes (cum &lt;= 6.25MB)</div><div class="line">      flat  flat%   sum%        cum   cum%</div><div class="line"> 1034.58MB 82.73% 82.73%  1250.09MB   100%  time.NewTimer</div><div class="line">  215.51MB 17.23%   100%   215.51MB 17.23%  time.startTimer</div><div class="line">         0     0%   100%  1250.09MB   100%  main.memoryLeak</div><div class="line">         0     0%   100%  1250.09MB   100%  time.After</div></pre></td></tr></table></figure></p><p>此时内存堆积了3s之内的time对象，会不断的新建和释放对象，浪费内存空间以及CPU性能</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;pprof&lt;/code&gt;是Go语言自带的性能检查工具。通过这个工具可以定位Go语言程序中存在的性能问题，进而优化性能。&lt;/p&gt;
&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环
      
    
    </summary>
    
    
      <category term="Go" scheme="http://printxhl.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog</title>
    <link href="http://printxhl.com/2018/11/05/Linux-HexoBlog/"/>
    <id>http://printxhl.com/2018/11/05/Linux-HexoBlog/</id>
    <published>2018-11-05T14:41:48.249Z</published>
    <updated>2019-05-16T11:02:26.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-本地建站"><a href="#Hexo-本地建站" class="headerlink" title="Hexo 本地建站"></a>Hexo 本地建站</h2><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul><li><p>安装<code>Node.js</code></p></li><li><p>安装<code>Git</code></p></li><li><p>安装<code>Hexo</code></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure><h3 id="建立站点"><a href="#建立站点" class="headerlink" title="建立站点"></a>建立站点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 新建xiehailian.github.io文件夹</span></div><div class="line">$ cd /c/Users/XHL/OneDrive</div><div class="line">$ mkdir xiehailian.github.io</div><div class="line"></div><div class="line"><span class="comment"># 更新NPM镜像</span></div><div class="line">$ npm config set registry <span class="string">'https://registry.npm.taobao.org'</span></div><div class="line"></div><div class="line"><span class="comment"># 初始化网站</span></div><div class="line">$ cd /c/Users/XHL/OneDrive/xiehailian.github.io</div><div class="line">$ hexo init</div><div class="line">$ npm install</div><div class="line"></div><div class="line"><span class="comment"># 启动网站</span></div><div class="line">$ hexo server</div></pre></td></tr></table></figure><h3 id="使用主题indigo"><a href="#使用主题indigo" class="headerlink" title="使用主题indigo"></a>使用主题<code>indigo</code></h3><h4 id="安装indigo"><a href="#安装indigo" class="headerlink" title="安装indigo"></a>安装<code>indigo</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载主题</span></div><div class="line">$ cd /c/Users/XHL/OneDrive/xiehailian.github.io</div><div class="line">$ git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</div><div class="line"></div><div class="line"><span class="comment"># 安装依赖</span></div><div class="line">$ npm install hexo-renderer-less --save<span class="comment"># css预处理工具</span></div><div class="line">$ npm install hexo-generator-feed --save<span class="comment"># 生成rss</span></div><div class="line">$ npm install hexo-generator-json-content --save<span class="comment"># 站内搜索</span></div><div class="line"></div><div class="line"><span class="comment"># 开启标签页</span></div><div class="line">$ hexo new page tags</div><div class="line">$ vi /c/Users/XHL/OneDrive/xiehailian.github.io/source/tags/index.md</div><div class="line"></div><div class="line">layout: tags</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure><h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">$ vim /c/Users/XHL/OneDrive/xiehailian.github.io/_config.yml</div><div class="line"></div><div class="line"><span class="comment"># 启用主题</span></div><div class="line">theme: indigo</div><div class="line"></div><div class="line"><span class="comment"># 基本配置</span></div><div class="line">title: PrintXHL</div><div class="line">subtitle: 我就想做一点微小的工作</div><div class="line">description: </div><div class="line">author: 谢海练</div><div class="line">language:</div><div class="line">timezone:</div><div class="line">email: xiehailian66@<span class="number">126.</span>com</div><div class="line"></div><div class="line"><span class="comment"># feed配置</span></div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: <span class="number">0</span></div><div class="line">  </div><div class="line"><span class="comment"># jsonContent配置</span></div><div class="line">jsonContent:</div><div class="line">  meta: false</div><div class="line">  pages: false</div><div class="line">  posts:</div><div class="line">    title: true</div><div class="line">    date: true</div><div class="line">    path: true</div><div class="line">    text: true</div><div class="line">    raw: false</div><div class="line">    content: false</div><div class="line">    slug: false</div><div class="line">    updated: false</div><div class="line">    comments: false</div><div class="line">    link: false</div><div class="line">    permalink: false</div><div class="line">    excerpt: false</div><div class="line">    categories: false</div><div class="line">    tags: true</div></pre></td></tr></table></figure><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">$ vi /c/Users/XHL/OneDrive/xiehailian.github.io/themes/indigo/._config.yml</div><div class="line"></div><div class="line"><span class="comment"># 左侧菜单</span></div><div class="line">menu:</div><div class="line">  home:</div><div class="line">    text: 主页</div><div class="line">    url: /</div><div class="line">  archives:</div><div class="line">    url: /archives</div><div class="line">  tags:</div><div class="line">    url: /tags</div><div class="line">  github:</div><div class="line">    url: https://github.com/xiehailian</div><div class="line">    target: _blank</div><div class="line"> link:               <span class="comment"># fontawesome图标，省略前缀，本主题前缀为 icon-，必须</span></div><div class="line">   text: About       <span class="comment"># 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写</span></div><div class="line">   url: /about       <span class="comment"># 链接，绝对或相对路径，必须</span></div><div class="line">   target: _blank    <span class="comment"># 是否跳出，省略则在当前页面打开</span></div><div class="line"></div><div class="line"><span class="comment"># favicon，站点logo</span></div><div class="line">favicon: /favicon.ico</div><div class="line"></div><div class="line"><span class="comment"># 头像</span></div><div class="line">avatar: /img/logo.jpg</div><div class="line"></div><div class="line"><span class="comment"># email</span></div><div class="line">email: xiehailian66@<span class="number">126.</span>com</div><div class="line"></div><div class="line"><span class="comment"># color</span></div><div class="line">color: <span class="string">'2361b6'</span></div><div class="line"></div><div class="line"><span class="comment"># 文章摘要</span></div><div class="line">excerpt_render: false<span class="comment"># 文章摘要渲染方式: 为 true 时将渲染为 html，否则为文本</span></div><div class="line">excerpt_length: <span class="number">200</span><span class="comment"># 截断长度</span></div><div class="line">excerpt_link: 阅读全文...<span class="comment"># 文字正文页链接文字</span></div><div class="line"></div><div class="line"><span class="comment"># 公式渲染</span></div><div class="line">mathjax: true</div><div class="line"></div><div class="line"><span class="comment"># 站内搜索</span></div><div class="line">search: true</div><div class="line"></div><div class="line"><span class="comment"># 布局</span></div><div class="line">hideMenu: true</div><div class="line"></div><div class="line"><span class="comment"># 文章目录</span></div><div class="line">toc:</div><div class="line">  list_number: false  <span class="comment"># 决定导航使用的标签， true 为 ol， false 为 ul</span></div><div class="line">  </div><div class="line"><span class="comment"># less编译入口</span></div><div class="line">less:</div><div class="line">  compress: true    <span class="comment"># 是否压缩css</span></div><div class="line">  paths:</div><div class="line">    - source/css/style.less</div></pre></td></tr></table></figure><h4 id="生成自己的内容"><a href="#生成自己的内容" class="headerlink" title="生成自己的内容"></a>生成自己的内容</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo server -p <span class="number">6688</span></div><div class="line"></div><div class="line"><span class="comment"># 清楚缓存文件和静态文件</span></div><div class="line">$ hexo clean</div></pre></td></tr></table></figure><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到<code>Github</code></h2><h3 id="Github-授权"><a href="#Github-授权" class="headerlink" title="Github 授权"></a>Github 授权</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在Github上新建仓库，xiehailian.github.io</span></div><div class="line"></div><div class="line"><span class="comment"># 告诉Github代码是谁提交的</span></div><div class="line">$ git config --<span class="keyword">global</span> user.name <span class="string">"xiehailian"</span></div><div class="line">$ git config --<span class="keyword">global</span> user.email <span class="string">"xiehailian66@126.com"</span></div><div class="line"></div><div class="line"><span class="comment"># 生成SSH key</span></div><div class="line">$ ssh-keygen -t rsa -b <span class="number">4096</span> -C <span class="string">"xiehailian66@126.com"</span></div><div class="line"></div><div class="line"><span class="comment"># 将SSH key添加到ssh-agent</span></div><div class="line">$ eval <span class="string">"$(ssh-agent -s)"</span></div><div class="line">$ ssh-add ~/.ssh/id_rsa</div><div class="line"></div><div class="line"><span class="comment"># 将SSH key添加到Github账户</span></div><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div><div class="line"></div><div class="line"><span class="comment"># 测试SSH连接</span></div><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure><h3 id="Hexo-部署"><a href="#Hexo-部署" class="headerlink" title="Hexo 部署"></a>Hexo 部署</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div><div class="line"></div><div class="line">$ vim /c/Users/XHL/OneDrive/xiehailian.github.io/_config.yml</div><div class="line"></div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/xiehailian/xiehailian.github.io.git</div><div class="line">  branch: master</div><div class="line">    </div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><h2 id="绑定独立域名"><a href="#绑定独立域名" class="headerlink" title="绑定独立域名"></a>绑定独立域名</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo-本地建站&quot;&gt;&lt;a href=&quot;#Hexo-本地建站&quot; class=&quot;headerlink&quot; title=&quot;Hexo 本地建站&quot;&gt;&lt;/a&gt;Hexo 本地建站&lt;/h2&gt;&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://printxhl.com/tags/Linux/"/>
    
      <category term="Git" scheme="http://printxhl.com/tags/Git/"/>
    
  </entry>
  
</feed>
